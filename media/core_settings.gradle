// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
def rootDir = file(".")
if (!gradle.ext.has('androidxMediaSettingsDir')) {
    gradle.ext.androidxMediaSettingsDir = rootDir.getCanonicalPath()
}

def modulePrefix = ':'
if (gradle.ext.has('androidxMediaModulePrefix')) {
    modulePrefix += gradle.ext.androidxMediaModulePrefix
}

include modulePrefix + 'lib-common'
project(modulePrefix + 'lib-common').projectDir = new File(rootDir, 'libraries/common')

include modulePrefix + 'lib-container'
project(modulePrefix + 'lib-container').projectDir = new File(rootDir, 'libraries/container')


include modulePrefix + 'lib-exoplayer'
project(modulePrefix + 'lib-exoplayer').projectDir = new File(rootDir, 'libraries/exoplayer')
include modulePrefix + 'lib-extractor'
project(modulePrefix + 'lib-extractor').projectDir = new File(rootDir, 'libraries/extractor')
include modulePrefix + 'lib-exoplayer-dash'
project(modulePrefix + 'lib-exoplayer-dash').projectDir = new File(rootDir, 'libraries/exoplayer_dash')
include modulePrefix + 'lib-exoplayer-hls'
project(modulePrefix + 'lib-exoplayer-hls').projectDir = new File(rootDir, 'libraries/exoplayer_hls')
include modulePrefix + 'lib-exoplayer-rtsp'
project(modulePrefix + 'lib-exoplayer-rtsp').projectDir = new File(rootDir, 'libraries/exoplayer_rtsp')
include modulePrefix + 'lib-effect'
project(modulePrefix + 'lib-effect').projectDir = new File(rootDir, 'libraries/effect')
include modulePrefix + 'lib-exoplayer-workmanager'
project(modulePrefix + 'lib-exoplayer-workmanager').projectDir = new File(rootDir, 'libraries/exoplayer_workmanager')


include modulePrefix + 'lib-database'
project(modulePrefix + 'lib-database').projectDir = new File(rootDir, 'libraries/database')

include modulePrefix + 'lib-datasource'
project(modulePrefix + 'lib-datasource').projectDir = new File(rootDir, 'libraries/datasource')

include modulePrefix + 'lib-datasource-cronet'
project(modulePrefix + 'lib-datasource-cronet').projectDir = new File(rootDir, 'libraries/datasource_cronet')

include modulePrefix + 'lib-datasource-rtmp'
project(modulePrefix + 'lib-datasource-rtmp').projectDir = new File(rootDir, 'libraries/datasource_rtmp')

include modulePrefix + 'lib-datasource-okhttp'
project(modulePrefix + 'lib-datasource-okhttp').projectDir = new File(rootDir, 'libraries/datasource_okhttp')

include modulePrefix + 'lib-decoder'
project(modulePrefix + 'lib-decoder').projectDir = new File(rootDir, 'libraries/decoder')

include modulePrefix + 'lib-decoder-av1'
project(modulePrefix + 'lib-decoder-av1').projectDir = new File(rootDir, 'libraries/decoder_av1')

include modulePrefix + 'lib-decoder-ffmpeg'
project(modulePrefix + 'lib-decoder-ffmpeg').projectDir = new File(rootDir, 'libraries/decoder_ffmpeg')

include modulePrefix + 'lib-decoder-vp9'
project(modulePrefix + 'lib-decoder-vp9').projectDir = new File(rootDir, 'libraries/decoder_vp9')







